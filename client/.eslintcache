[{"C:\\MainRoot\\MovieJohnAhn\\client\\src\\index.js":"1","C:\\MainRoot\\MovieJohnAhn\\client\\src\\_reducers\\index.js":"2","C:\\MainRoot\\MovieJohnAhn\\client\\src\\_reducers\\user_reducer.js":"3","C:\\MainRoot\\MovieJohnAhn\\client\\src\\serviceWorker.js":"4","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\App.js":"5","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"6","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"7","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"8","C:\\MainRoot\\MovieJohnAhn\\client\\src\\_actions\\types.js":"9","C:\\MainRoot\\MovieJohnAhn\\client\\src\\hoc\\auth.js":"10","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\Footer\\Footer.js":"11","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\NavBar\\NavBar.js":"12","C:\\MainRoot\\MovieJohnAhn\\client\\src\\_actions\\user_actions.js":"13","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"14","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"15","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\Config.js":"16","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\Sections\\MainImage.js":"17","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\commons\\GridCards.js":"18","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\MovieDetail\\MovieDetail.js":"19","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\MovieDetail\\Sections\\MovieInfo.js":"20","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\MovieDetail\\Sections\\Favorite.js":"21","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\FavoritePage\\FavoritePage.js":"22"},{"size":1187,"mtime":1596616099000,"results":"23","hashOfConfig":"24"},{"size":157,"mtime":1596616099000,"results":"25","hashOfConfig":"24"},{"size":533,"mtime":1596616099000,"results":"26","hashOfConfig":"24"},{"size":4951,"mtime":1596616099000,"results":"27","hashOfConfig":"24"},{"size":1328,"mtime":1608103294120,"results":"28","hashOfConfig":"24"},{"size":2432,"mtime":1608033930133,"results":"29","hashOfConfig":"24"},{"size":5141,"mtime":1607955708508,"results":"30","hashOfConfig":"24"},{"size":6254,"mtime":1596616099000,"results":"31","hashOfConfig":"24"},{"size":166,"mtime":1596616099000,"results":"32","hashOfConfig":"24"},{"size":1455,"mtime":1596616099000,"results":"33","hashOfConfig":"24"},{"size":299,"mtime":1607955684448,"results":"34","hashOfConfig":"24"},{"size":1412,"mtime":1608109211574,"results":"35","hashOfConfig":"24"},{"size":1034,"mtime":1596616099000,"results":"36","hashOfConfig":"24"},{"size":1095,"mtime":1596616099000,"results":"37","hashOfConfig":"24"},{"size":402,"mtime":1608103252365,"results":"38","hashOfConfig":"24"},{"size":234,"mtime":1607957936480,"results":"39","hashOfConfig":"24"},{"size":801,"mtime":1607958688552,"results":"40","hashOfConfig":"24"},{"size":866,"mtime":1608033991817,"results":"41","hashOfConfig":"24"},{"size":3014,"mtime":1608044670763,"results":"42","hashOfConfig":"24"},{"size":981,"mtime":1608029224219,"results":"43","hashOfConfig":"24"},{"size":2755,"mtime":1608044643594,"results":"44","hashOfConfig":"24"},{"size":2911,"mtime":1608107574251,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1bcw17",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\MainRoot\\MovieJohnAhn\\client\\src\\index.js",[],["99","100"],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\_reducers\\index.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\_reducers\\user_reducer.js",["101"],"import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","C:\\MainRoot\\MovieJohnAhn\\client\\src\\serviceWorker.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\App.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["102"],"import React, { useState, useEffect } from 'react'\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\nimport MainImage from '../Sections/MainImage';\nimport GridCards from '../commons/GridCards';\nimport { Row } from 'antd';\n\nfunction LandingPage() {\n    \n    const [movies, setMovies] = useState([])\n    const [mainMovieImage, setMainMovieImage] = useState(null)\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n        fetchMovies(endpoint)\n\n    }, [])\n\n    const fetchMovies = (endpoint) => {\n        fetch(endpoint)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res.results)\n                setMovies([...movies, ...res.results])\n                setMainMovieImage(res.results[0])\n                setCurrentPage(res.page)\n            })\n    }\n\n    const loadMoreItems = () => {\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n        fetchMovies(endpoint)\n    }\n    \n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n            {mainMovieImage && \n                <MainImage \n                    image={ `${IMAGE_BASE_URL}w1280${mainMovieImage.backdrop_path}` } \n                    title={mainMovieImage.original_title}\n                    text={mainMovieImage.overview}\n                />\n            }\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <h2>Latest Movies</h2>\n                <hr></hr>\n                <Row gutter={[16, 16]}>\n                    {movies && movies.map((movie, index) => (\n                        <React.Fragment key={index}>\n                            <GridCards \n                                landingPage\n                                image={movie.poster_path ? \n                                `${IMAGE_BASE_URL}w500${movie.poster_path}` : null}\n                                movieId={movie.id}\n                                movieName={movie.original_title}\n                            />\n                        </React.Fragment>\n                    ))}\n                </Row>\n            </div>\n            \n            <div style={{ textAlign:\"center\" }}>\n                <button onClick={loadMoreItems}>Load More</button>\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage\n","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["103","104"],"import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["105","106"],"import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","C:\\MainRoot\\MovieJohnAhn\\client\\src\\_actions\\types.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\hoc\\auth.js",["107"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\NavBar\\NavBar.js",["108"],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\_actions\\user_actions.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",["109","110"],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\Config.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\Sections\\MainImage.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\commons\\GridCards.js",[],"C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\MovieDetail\\MovieDetail.js",["111"],"import React, { useEffect, useState } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\r\nimport MainImage from '../Sections/MainImage';\r\nimport MovieInfo from './Sections/MovieInfo';\r\nimport GridCards from '../commons/GridCards';\r\nimport Favorite from './Sections/Favorite';\r\nimport { Row, Button } from 'antd';\r\n\r\nfunction MovieDetail(props) {\r\n\r\n    // movie/48888 <-- 이런식으로 url 나타나진 거 가져오는 방법\r\n    // App.js에서 :movieId로 지정을 했기 때문에\r\n    let movieId = props.match.params.movieId\r\n    // console.log(props.match)\r\n    const [movie, setMovie] = useState([])\r\n    const [casts, setCasts] = useState([])\r\n    const [actorToggle, setActorToggle] = useState(false)\r\n\r\n    // useEffect란 맨 처음 페이지 로드될때 처음에 할 동작들을 넣어주는 것\r\n    useEffect(() => {\r\n\r\n        let endpointCrew = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\r\n        let endpointInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}`\r\n\r\n        fetch(endpointInfo)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                // console.log(res);\r\n                setMovie(res)\r\n            })\r\n\r\n        fetch(endpointCrew)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setCasts(res.cast)\r\n            })\r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            {/* Header */}\r\n            <MainImage\r\n                image={ `${IMAGE_BASE_URL}w1280${movie.backdrop_path}` } \r\n                title={movie.original_title}\r\n                text={movie.overview}\r\n            />\r\n            {/* Body */}\r\n            <div style={{ width:'85%', margin:'1rem auto' }}>\r\n                <div style={{ display:'flex', justifyContent:'flex-end' }}>\r\n                    <Favorite movieInfo={movie} movieId={movieId} userFrom={localStorage.getItem('userId')} />\r\n                </div>\r\n\r\n                {/* Movie Info */}\r\n                <MovieInfo\r\n                    movie ={movie}\r\n                />\r\n                <br/>\r\n                {/* Actors Grid */}\r\n                <div style={{ display:'flex', justifyContent:'center', margin:'2rem' }}>\r\n                    <Button onClick={() => setActorToggle(!actorToggle)}>Toggle Actor View</Button>\r\n                </div>\r\n\r\n                {actorToggle && \r\n                <Row gutter={[16, 16]}>\r\n                    {casts && casts.map((cast, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <GridCards \r\n                                image={cast.profile_path ? \r\n                                `${IMAGE_BASE_URL}w500${cast.profile_path}` : null}\r\n                                characterName={cast.name}\r\n                            />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </Row>\r\n                }\r\n\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetail\r\n","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\MovieDetail\\Sections\\MovieInfo.js",["112"],"import React from 'react'\r\nimport { Descriptions, Badge } from 'antd';\r\n\r\nfunction MovieInfo(props) {\r\n\r\n    let { movie } = props;\r\n\r\n    return (\r\n        <Descriptions title=\"Movie Info\" bordered> \r\n            <Descriptions.Item label=\"Title\">{movie.original_title}</Descriptions.Item>\r\n            <Descriptions.Item label=\"release_date\">{movie.release_date}</Descriptions.Item>\r\n            <Descriptions.Item label=\"revenue\">{movie.revenue}</Descriptions.Item>\r\n            <Descriptions.Item label=\"runtime\">{movie.runtime}</Descriptions.Item>\r\n            <Descriptions.Item label=\"vote_average\" spna={2}>{movie.vote_average}</Descriptions.Item>\r\n            <Descriptions.Item label=\"vote_count\">{movie.vote_count}</Descriptions.Item>\r\n            <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\r\n            <Descriptions.Item label=\"popularity\">{movie.popularity}</Descriptions.Item>\r\n        </Descriptions>\r\n    )\r\n}\r\n\r\nexport default MovieInfo\r\n","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\MovieDetail\\Sections\\Favorite.js",["113"],"import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { Button } from 'antd';\r\n\r\nfunction Favorite(props) {\r\n\r\n    const movieId = props.movieId;\r\n    const userFrom = props.userFrom;\r\n    const movieTitle = props.movieInfo.title;\r\n    const moviePost = props.movieInfo.backdrop_path;\r\n    const movieRunTime = props.movieInfo.runtime;\r\n\r\n    const [favoriteNumber, setFavoriteNumber] = useState(0)\r\n    const [favorited, setFavorited] = useState(false)\r\n\r\n    let variables = {\r\n        // models의 Favorite에 담긴 것만 추가해야함 \r\n        // (routes의 favorite.js에 const { Favorite } = require('../models/Favorite'); 이런 식으로 엮였으니)\r\n        userFrom: userFrom,\r\n        movieId: movieId,\r\n        movieTitle: movieTitle,\r\n        moviePost: moviePost,\r\n        movieRunTime: movieRunTime\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/favorite/favoriteNumber', variables)\r\n            .then(res => {\r\n                // console.log(res.data)\r\n                if(res.data.success) {\r\n                    setFavoriteNumber(res.data.favoriteNumber);\r\n                } else {\r\n                    alert('숫자 정보를 가져오는데 실패했습니다.');\r\n                }\r\n            })\r\n\r\n        Axios.post('/api/favorite/favorited', variables)\r\n            .then(res => {\r\n                if(res.data.success) {\r\n                    // console.log('favorite', res.data)\r\n                    setFavorited(res.data.favorited);\r\n                } else {\r\n                    alert('정보를 가져오는데 실패했습니다.');\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n    const onClickFavorite = () => {\r\n        if(favorited) {\r\n            Axios.post('/api/favorite/removeFromFavorite', variables)\r\n            .then(res => {\r\n                if(res.data.success) {\r\n                    setFavoriteNumber(favoriteNumber - 1);\r\n                    setFavorited(!favorited)\r\n                } else {\r\n                    alert('Favorite 리스트에서 지우는 걸 실패했습니다.');\r\n                }\r\n            })\r\n        } else {\r\n            Axios.post('/api/favorite/addToFavorite', variables) \r\n            .then(res => {\r\n                if(res.data.success) {\r\n                    setFavoriteNumber(favoriteNumber + 1);\r\n                    setFavorited(!favorited)\r\n                } else {\r\n                    alert('Faverite 리스트에 추가하는 걸 실패했습니다.');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={onClickFavorite}>{favorited ? \"Not Favorite\" : \"Add to Favorite\"}{favoriteNumber}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorite\r\n","C:\\MainRoot\\MovieJohnAhn\\client\\src\\components\\views\\FavoritePage\\FavoritePage.js",["114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":9,"column":1,"nodeType":"121","endLine":22,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":17,"column":8,"nodeType":"124","endLine":17,"endColumn":10,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":75,"column":11,"nodeType":"128","messageId":"129","endLine":75,"endColumn":16},{"ruleId":"126","severity":1,"message":"130","line":80,"column":11,"nodeType":"128","messageId":"129","endLine":80,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":92,"column":11,"nodeType":"128","messageId":"129","endLine":92,"endColumn":16},{"ruleId":"126","severity":1,"message":"130","line":97,"column":11,"nodeType":"128","messageId":"129","endLine":97,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":6,"column":1,"nodeType":"121","endLine":42,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":23,"column":21,"nodeType":"133","endLine":23,"endColumn":50},{"ruleId":"126","severity":1,"message":"134","line":3,"column":7,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"135","line":4,"column":7,"nodeType":"128","messageId":"129","endLine":4,"endColumn":20},{"ruleId":"122","severity":1,"message":"136","line":37,"column":8,"nodeType":"124","endLine":37,"endColumn":10,"suggestions":"137"},{"ruleId":"126","severity":1,"message":"138","line":2,"column":24,"nodeType":"128","messageId":"129","endLine":2,"endColumn":29},{"ruleId":"122","severity":1,"message":"139","line":47,"column":8,"nodeType":"124","endLine":47,"endColumn":10,"suggestions":"140"},{"ruleId":"131","severity":1,"message":"132","line":56,"column":21,"nodeType":"133","endLine":56,"endColumn":79},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["143"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'movieId'. Either include it or remove the dependency array.",["144"],"'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'variables'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [fetchMovies]",{"range":"152","text":"153"},"Update the dependencies array to be: [movieId]",{"range":"154","text":"155"},"Update the dependencies array to be: [variables]",{"range":"156","text":"157"},[584,586],"[fetchMovies]",[1267,1269],"[movieId]",[1553,1555],"[variables]"]